{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://elasticfilesystem.amazonaws.com/"
        },
        {
            "url": "http://elasticfilesystem.amazonaws.com/"
        }
    ],
    "info": {
        "contact": {
            "email": "mike.ralphson@gmail.com",
            "name": "Mike Ralphson",
            "url": "https://github.com/mermade/aws2openapi",
            "x-twitter": "PermittedSoc"
        },
        "description": "<fullname>Amazon Elastic File System</fullname> <p>Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 instances in the AWS Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so your applications have the storage they need, when they need it. For more information, see the <a href=\"https://docs.aws.amazon.com/efs/latest/ug/api-reference.html\">User Guide</a>.</p>",
        "license": {
            "name": "Apache 2.0 License",
            "url": "http://www.apache.org/licenses/"
        },
        "termsOfService": "https://aws.amazon.com/service-terms/",
        "title": "Amazon Elastic File System",
        "version": "2015-02-01",
        "x-apiClientRegistration": {
            "url": "https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct"
        },
        "x-apisguru-categories": [
            "cloud"
        ],
        "x-logo": {
            "backgroundColor": "#FFFFFF",
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg"
        },
        "x-origin": [
            {
                "contentType": "application/json",
                "converter": {
                    "url": "https://github.com/mermade/aws2openapi",
                    "version": "1.0.0"
                },
                "url": "https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticfilesystem-2015-02-01.normal.json",
                "x-apisguru-direct": true
            }
        ],
        "x-preferred": true,
        "x-providerName": "amazonaws.com",
        "x-release": "v4",
        "x-serviceName": "elasticfilesystem"
    },
    "externalDocs": {
        "description": "Amazon Web Services documentation",
        "url": "https://aws.amazon.com/elasticfilesystem/"
    },
    "security": [
        {
            "hmac": []
        }
    ],
    "paths": {
        "/2015-02-01/create-tags/{FileSystemId}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the <code>Name</code> tag to your file system, Amazon EFS returns it in the response to the <a>DescribeFileSystems</a> operation. </p> <p>This operation requires permission for the <code>elasticfilesystem:CreateTags</code> action.</p>",
                "operationId": "CreateTags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567",
                                    "Tags": [
                                        {
                                            "Key": "Name",
                                            "Value": "MyFileSystem"
                                        }
                                    ]
                                },
                                "properties": {
                                    "Tags": {
                                        "description": "An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value pair. ",
                                        "items": {
                                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag key.",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "Tags"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/delete-tags/{FileSystemId}": {
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Deletes the specified tags from a file system. If the <code>DeleteTags</code> request includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an error. For more information about tags and related restrictions, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html\">Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DeleteTags</code> action.</p>",
                "operationId": "DeleteTags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567",
                                    "TagKeys": [
                                        "Name"
                                    ]
                                },
                                "properties": {
                                    "TagKeys": {
                                        "description": "A list of tag keys to delete.",
                                        "items": {
                                            "maxLength": 128,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "TagKeys"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/file-systems": {
            "get": {
                "description": "<p>Returns the description of a specific Amazon EFS file system if either the file system <code>CreationToken</code> or the <code>FileSystemId</code> is provided. Otherwise, it returns descriptions of all file systems owned by the caller's AWS account in the AWS Region of the endpoint that you're calling.</p> <p>When retrieving all file system descriptions, you can optionally specify the <code>MaxItems</code> parameter to limit the number of descriptions in a response. Currently, this number is automatically set to 10. If more file system descriptions remain, Amazon EFS returns a <code>NextMarker</code>, an opaque token, in the response. In this case, you should send a subsequent request with the <code>Marker</code> request parameter set to the value of <code>NextMarker</code>. </p> <p>To retrieve a list of your file system descriptions, this operation is used in an iterative process, where <code>DescribeFileSystems</code> is called first without the <code>Marker</code> and then the operation continues to call it with the <code>Marker</code> parameter set to the value of the <code>NextMarker</code> from the previous response until the response has no <code>NextMarker</code>. </p> <p> The order of file systems returned in the response of one <code>DescribeFileSystems</code> call and the order of file systems returned across the responses of a multi-call iteration is unspecified. </p> <p> This operation requires permissions for the <code>elasticfilesystem:DescribeFileSystems</code> action. </p>",
                "operationId": "DescribeFileSystems",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "FileSystems": [
                                            {
                                                "CreationTime": "1481841524.0",
                                                "CreationToken": "tokenstring",
                                                "FileSystemId": "fs-01234567",
                                                "LifeCycleState": "available",
                                                "Name": "MyFileSystem",
                                                "NumberOfMountTargets": 1,
                                                "OwnerId": "012345678912",
                                                "PerformanceMode": "generalPurpose",
                                                "SizeInBytes": {
                                                    "Value": 6144
                                                },
                                                "Tags": [
                                                    {
                                                        "Key": "Name",
                                                        "Value": "MyFileSystem"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "FileSystems": {
                                            "description": "An array of file system descriptions.",
                                            "items": {
                                                "description": "A description of the file system.",
                                                "example": {
                                                    "CreationTime": "1481841524.0",
                                                    "CreationToken": "tokenstring",
                                                    "FileSystemId": "fs-01234567",
                                                    "LifeCycleState": "creating",
                                                    "NumberOfMountTargets": 0,
                                                    "OwnerId": "012345678912",
                                                    "PerformanceMode": "generalPurpose",
                                                    "SizeInBytes": {
                                                        "Value": 0
                                                    },
                                                    "Tags": [
                                                        {
                                                            "Key": "Name",
                                                            "Value": "MyFileSystem"
                                                        }
                                                    ]
                                                },
                                                "properties": {
                                                    "CreationTime": {
                                                        "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "CreationToken": {
                                                        "description": "The opaque string specified in the request.",
                                                        "maxLength": 64,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Encrypted": {
                                                        "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                                                        "type": "boolean"
                                                    },
                                                    "FileSystemId": {
                                                        "description": "The ID of the file system, assigned by Amazon EFS.",
                                                        "type": "string"
                                                    },
                                                    "KmsKeyId": {
                                                        "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "LifeCycleState": {
                                                        "description": "The lifecycle phase of the file system.",
                                                        "enum": [
                                                            "creating",
                                                            "available",
                                                            "updating",
                                                            "deleting",
                                                            "deleted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "Name": {
                                                        "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    },
                                                    "NumberOfMountTargets": {
                                                        "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                                                        "minimum": 0,
                                                        "type": "integer"
                                                    },
                                                    "OwnerId": {
                                                        "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                                                        "type": "string"
                                                    },
                                                    "PerformanceMode": {
                                                        "description": "The performance mode of the file system.",
                                                        "enum": [
                                                            "generalPurpose",
                                                            "maxIO"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ProvisionedThroughputInMibps": {
                                                        "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                                                        "format": "double",
                                                        "minimum": 0,
                                                        "type": "number"
                                                    },
                                                    "SizeInBytes": {
                                                        "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                                                        "properties": {
                                                            "Timestamp": {
                                                                "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "Value": {
                                                                "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "ValueInIA": {
                                                                "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            },
                                                            "ValueInStandard": {
                                                                "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "Value"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "Tags": {
                                                        "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                                                        "items": {
                                                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                                            "properties": {
                                                                "Key": {
                                                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                                    "maxLength": 128,
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                },
                                                                "Value": {
                                                                    "description": "The value of the tag key.",
                                                                    "maxLength": 256,
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "Key",
                                                                "Value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ThroughputMode": {
                                                        "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                                                        "enum": [
                                                            "bursting",
                                                            "provisioned"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "OwnerId",
                                                    "CreationToken",
                                                    "FileSystemId",
                                                    "CreationTime",
                                                    "LifeCycleState",
                                                    "NumberOfMountTargets",
                                                    "SizeInBytes",
                                                    "PerformanceMode",
                                                    "Tags"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Marker": {
                                            "description": "Present if provided by caller in the request (String).",
                                            "type": "string"
                                        },
                                        "NextMarker": {
                                            "description": "Present if there are more file systems than returned in the response (String). You can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {},
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a new, empty file system. The operation requires a creation token in the request that Amazon EFS uses to ensure idempotent creation (calling the operation with same creation token has no effect). If a file system does not currently exist that is owned by the caller's AWS account with the specified creation token, this operation does the following:</p> <ul> <li> <p>Creates a new, empty file system. The file system will have an Amazon EFS assigned ID, and an initial lifecycle state <code>creating</code>.</p> </li> <li> <p>Returns with the description of the created file system.</p> </li> </ul> <p>Otherwise, this operation returns a <code>FileSystemAlreadyExists</code> error with the ID of the existing file system.</p> <note> <p>For basic use cases, you can use a randomly generated UUID for the creation token.</p> </note> <p> The idempotent operation allows you to retry a <code>CreateFileSystem</code> call without risk of creating an extra file system. This can happen when an initial call fails in a way that leaves it uncertain whether or not a file system was actually created. An example might be that a transport level timeout occurred or your connection was reset. As long as you use the same creation token, if the initial call had succeeded in creating a file system, the client can learn of its existence from the <code>FileSystemAlreadyExists</code> error.</p> <note> <p>The <code>CreateFileSystem</code> call returns while the file system's lifecycle state is still <code>creating</code>. You can check the file system creation status by calling the <a>DescribeFileSystems</a> operation, which among other things returns the file system state.</p> </note> <p>This operation also takes an optional <code>PerformanceMode</code> parameter that you choose for your file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html\">Amazon EFS: Performance Modes</a>.</p> <p>After the file system is fully created, Amazon EFS sets its lifecycle state to <code>available</code>, at which point you can create one or more mount targets for the file system in your VPC. For more information, see <a>CreateMountTarget</a>. You mount your Amazon EFS file system on an EC2 instances in your VPC by using the mount target. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\">Amazon EFS: How it Works</a>. </p> <p> This operation requires permissions for the <code>elasticfilesystem:CreateFileSystem</code> action. </p>",
                "operationId": "CreateFileSystem",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A description of the file system.",
                                    "example": {
                                        "CreationTime": "1481841524.0",
                                        "CreationToken": "tokenstring",
                                        "FileSystemId": "fs-01234567",
                                        "LifeCycleState": "creating",
                                        "NumberOfMountTargets": 0,
                                        "OwnerId": "012345678912",
                                        "PerformanceMode": "generalPurpose",
                                        "SizeInBytes": {
                                            "Value": 0
                                        },
                                        "Tags": [
                                            {
                                                "Key": "Name",
                                                "Value": "MyFileSystem"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "CreationTime": {
                                            "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "CreationToken": {
                                            "description": "The opaque string specified in the request.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Encrypted": {
                                            "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                                            "type": "boolean"
                                        },
                                        "FileSystemId": {
                                            "description": "The ID of the file system, assigned by Amazon EFS.",
                                            "type": "string"
                                        },
                                        "KmsKeyId": {
                                            "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "LifeCycleState": {
                                            "description": "The lifecycle phase of the file system.",
                                            "enum": [
                                                "creating",
                                                "available",
                                                "updating",
                                                "deleting",
                                                "deleted"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                                            "maxLength": 256,
                                            "type": "string"
                                        },
                                        "NumberOfMountTargets": {
                                            "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "OwnerId": {
                                            "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                                            "type": "string"
                                        },
                                        "PerformanceMode": {
                                            "description": "The performance mode of the file system.",
                                            "enum": [
                                                "generalPurpose",
                                                "maxIO"
                                            ],
                                            "type": "string"
                                        },
                                        "ProvisionedThroughputInMibps": {
                                            "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                                            "format": "double",
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "SizeInBytes": {
                                            "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                                            "properties": {
                                                "Timestamp": {
                                                    "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "ValueInIA": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "ValueInStandard": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "Tags": {
                                            "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                                            "items": {
                                                "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the tag key.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ThroughputMode": {
                                            "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                                            "enum": [
                                                "bursting",
                                                "provisioned"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "OwnerId",
                                        "CreationToken",
                                        "FileSystemId",
                                        "CreationTime",
                                        "LifeCycleState",
                                        "NumberOfMountTargets",
                                        "SizeInBytes",
                                        "PerformanceMode",
                                        "Tags"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemAlreadyExists",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FileSystemLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InsufficientThroughputCapacity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ThroughputLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "CreationToken": "tokenstring",
                                    "PerformanceMode": "generalPurpose",
                                    "Tags": [
                                        {
                                            "Key": "Name",
                                            "Value": "MyFileSystem"
                                        }
                                    ]
                                },
                                "properties": {
                                    "CreationToken": {
                                        "description": "A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.",
                                        "maxLength": 64,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Encrypted": {
                                        "description": "A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying <a>CreateFileSystemRequest$KmsKeyId</a> for an existing AWS Key Management Service (AWS KMS) customer master key (CMK). If you don't specify a CMK, then the default CMK for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system. ",
                                        "type": "boolean"
                                    },
                                    "KmsKeyId": {
                                        "description": "<p>The ID of the AWS KMS CMK to be used to protect the encrypted file system. This parameter is only required if you want to use a nondefault CMK. If this parameter is not specified, the default CMK for Amazon EFS is used. This ID can be in one of the following formats:</p> <ul> <li> <p>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p> </li> </ul> <p>If <code>KmsKeyId</code> is specified, the <a>CreateFileSystemRequest$Encrypted</a> parameter must be set to true.</p>",
                                        "maxLength": 2048,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "PerformanceMode": {
                                        "description": "The performance mode of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.",
                                        "enum": [
                                            "generalPurpose",
                                            "maxIO"
                                        ],
                                        "type": "string"
                                    },
                                    "ProvisionedThroughputInMibps": {
                                        "description": "The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                                        "format": "double",
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "Tags": {
                                        "description": "A value that specifies to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"</code> key-value pair.",
                                        "items": {
                                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                            "properties": {
                                                "Key": {
                                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                    "maxLength": 128,
                                                    "minLength": 1,
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The value of the tag key.",
                                                    "maxLength": 256,
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "Key",
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "ThroughputMode": {
                                        "description": "The throughput mode for the file system to be created. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                                        "enum": [
                                            "bursting",
                                            "provisioned"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "CreationToken"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/file-systems/{FileSystemId}": {
            "delete": {
                "description": "<p>Deletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you can't access any contents of the deleted file system.</p> <p> You can't delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see <a>DescribeMountTargets</a> and <a>DeleteMountTarget</a>. </p> <note> <p>The <code>DeleteFileSystem</code> call returns while the file system state is still <code>deleting</code>. You can check the file system deletion status by calling the <a>DescribeFileSystems</a> operation, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the <a>DescribeFileSystems</a> returns a <code>404 FileSystemNotFound</code> error.</p> </note> <p>This operation requires permissions for the <code>elasticfilesystem:DeleteFileSystem</code> action.</p>",
                "operationId": "DeleteFileSystem",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "FileSystemInUse",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates the throughput mode or the amount of provisioned throughput of an existing file system.",
                "operationId": "UpdateFileSystem",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "A description of the file system.",
                                    "example": {
                                        "CreationTime": "1481841524.0",
                                        "CreationToken": "tokenstring",
                                        "FileSystemId": "fs-01234567",
                                        "LifeCycleState": "creating",
                                        "NumberOfMountTargets": 0,
                                        "OwnerId": "012345678912",
                                        "PerformanceMode": "generalPurpose",
                                        "SizeInBytes": {
                                            "Value": 0
                                        },
                                        "Tags": [
                                            {
                                                "Key": "Name",
                                                "Value": "MyFileSystem"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "CreationTime": {
                                            "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "CreationToken": {
                                            "description": "The opaque string specified in the request.",
                                            "maxLength": 64,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "Encrypted": {
                                            "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                                            "type": "boolean"
                                        },
                                        "FileSystemId": {
                                            "description": "The ID of the file system, assigned by Amazon EFS.",
                                            "type": "string"
                                        },
                                        "KmsKeyId": {
                                            "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                                            "maxLength": 2048,
                                            "minLength": 1,
                                            "type": "string"
                                        },
                                        "LifeCycleState": {
                                            "description": "The lifecycle phase of the file system.",
                                            "enum": [
                                                "creating",
                                                "available",
                                                "updating",
                                                "deleting",
                                                "deleted"
                                            ],
                                            "type": "string"
                                        },
                                        "Name": {
                                            "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                                            "maxLength": 256,
                                            "type": "string"
                                        },
                                        "NumberOfMountTargets": {
                                            "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "OwnerId": {
                                            "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                                            "type": "string"
                                        },
                                        "PerformanceMode": {
                                            "description": "The performance mode of the file system.",
                                            "enum": [
                                                "generalPurpose",
                                                "maxIO"
                                            ],
                                            "type": "string"
                                        },
                                        "ProvisionedThroughputInMibps": {
                                            "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                                            "format": "double",
                                            "minimum": 0,
                                            "type": "number"
                                        },
                                        "SizeInBytes": {
                                            "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                                            "properties": {
                                                "Timestamp": {
                                                    "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "Value": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "ValueInIA": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                },
                                                "ValueInStandard": {
                                                    "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                                    "minimum": 0,
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "Value"
                                            ],
                                            "type": "object"
                                        },
                                        "Tags": {
                                            "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                                            "items": {
                                                "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the tag key.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "ThroughputMode": {
                                            "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                                            "enum": [
                                                "bursting",
                                                "provisioned"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "OwnerId",
                                        "CreationToken",
                                        "FileSystemId",
                                        "CreationTime",
                                        "LifeCycleState",
                                        "NumberOfMountTargets",
                                        "SizeInBytes",
                                        "PerformanceMode",
                                        "Tags"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "IncorrectFileSystemLifeCycleState",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "InsufficientThroughputCapacity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "ThroughputLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "TooManyRequests",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "ProvisionedThroughputInMibps": {
                                        "description": "(Optional) The amount of throughput, in MiB/s, that you want to provision for your file system. If you're not updating the amount of provisioned throughput for your file system, you don't need to provide this value in your request.",
                                        "format": "double",
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "ThroughputMode": {
                                        "description": "(Optional) The throughput mode that you want your file system to use. If you're not updating your throughput mode, you don't need to provide this value in your request.",
                                        "enum": [
                                            "bursting",
                                            "provisioned"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration": {
            "get": {
                "description": "<p>Returns the current <code>LifecycleConfiguration</code> object for the specified Amazon EFS file system. EFS lifecycle management uses the <code>LifecycleConfiguration</code> object to identify which files to move to the EFS Infrequent Access (IA) storage class. For a file system without a <code>LifecycleConfiguration</code> object, the call returns an empty array in the response.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DescribeLifecycleConfiguration</code> operation.</p>",
                "operationId": "DescribeLifecycleConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "LifecyclePolicies": [
                                            {
                                                "TransitionToIA": "AFTER_30_DAYS"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "LifecyclePolicies": {
                                            "description": "An array of lifecycle management policies. Currently, EFS supports a maximum of one policy per file system.",
                                            "items": {
                                                "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                                                "properties": {
                                                    "TransitionToIA": {
                                                        "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                                                        "enum": [
                                                            "AFTER_30_DAYS"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "FileSystemId": "fs-01234567"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Enables lifecycle management by creating a new <code>LifecycleConfiguration</code> object. A <code>LifecycleConfiguration</code> object defines when files in an Amazon EFS file system are automatically transitioned to the lower-cost EFS Infrequent Access (IA) storage class. A <code>LifecycleConfiguration</code> applies to all files in a file system.</p> <p>Each Amazon EFS file system supports one lifecycle configuration, which applies to all files in the file system. If a <code>LifecycleConfiguration</code> object already exists for the specified file system, a <code>PutLifecycleConfiguration</code> call modifies the existing configuration. A <code>PutLifecycleConfiguration</code> call with an empty <code>LifecyclePolicies</code> array in the request body deletes any existing <code>LifecycleConfiguration</code> and disables lifecycle management.</p> <note> <p>You can enable lifecycle management only for EFS file systems created after the release of EFS infrequent access.</p> </note> <p>In the request, specify the following: </p> <ul> <li> <p>The ID for the file system for which you are creating a lifecycle management configuration.</p> </li> <li> <p>A <code>LifecyclePolicies</code> array of <code>LifecyclePolicy</code> objects that define when files are moved to the IA storage class. The array can contain only one <code>\"TransitionToIA\": \"AFTER_30_DAYS\"</code> <code>LifecyclePolicy</code> item.</p> </li> </ul> <p>This operation requires permissions for the <code>elasticfilesystem:PutLifecycleConfiguration</code> operation.</p> <p>To apply a <code>LifecycleConfiguration</code> object to an encrypted file system, you need the same AWS Key Management Service (AWS KMS) permissions as when you created the encrypted file system. </p>",
                "operationId": "PutLifecycleConfiguration",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "LifecyclePolicies": [
                                            {
                                                "TransitionToIA": "AFTER_30_DAYS"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "LifecyclePolicies": {
                                            "description": "An array of lifecycle management policies. Currently, EFS supports a maximum of one policy per file system.",
                                            "items": {
                                                "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                                                "properties": {
                                                    "TransitionToIA": {
                                                        "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                                                        "enum": [
                                                            "AFTER_30_DAYS"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IncorrectFileSystemLifeCycleState",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "FileSystemId": "fs-01234567",
                                    "LifecyclePolicies": [
                                        {
                                            "TransitionToIA": "AFTER_30_DAYS"
                                        }
                                    ]
                                },
                                "properties": {
                                    "LifecyclePolicies": {
                                        "description": "An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code> object. A <code>LifecycleConfiguration</code> object tells lifecycle management when to transition files from the Standard storage class to the Infrequent Access storage class.",
                                        "items": {
                                            "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                                            "properties": {
                                                "TransitionToIA": {
                                                    "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                                                    "enum": [
                                                        "AFTER_30_DAYS"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "LifecyclePolicies"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/mount-targets": {
            "get": {
                "description": "<p>Returns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified.</p> <p>This operation requires permissions for the <code>elasticfilesystem:DescribeMountTargets</code> action, on either the file system ID that you specify in <code>FileSystemId</code>, or on the file system of the mount target that you specify in <code>MountTargetId</code>.</p>",
                "operationId": "DescribeMountTargets",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "MountTargets": [
                                            {
                                                "FileSystemId": "fs-01234567",
                                                "IpAddress": "192.0.0.2",
                                                "LifeCycleState": "available",
                                                "MountTargetId": "fsmt-12340abc",
                                                "NetworkInterfaceId": "eni-cedf6789",
                                                "OwnerId": "012345678912",
                                                "SubnetId": "subnet-1234abcd"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": "If the request included the <code>Marker</code>, the response returns that value in this field.",
                                            "type": "string"
                                        },
                                        "MountTargets": {
                                            "description": "Returns the file system's mount targets as an array of <code>MountTargetDescription</code> objects.",
                                            "items": {
                                                "description": "Provides a description of a mount target.",
                                                "example": {
                                                    "FileSystemId": "fs-01234567",
                                                    "IpAddress": "192.0.0.2",
                                                    "LifeCycleState": "creating",
                                                    "MountTargetId": "fsmt-12340abc",
                                                    "NetworkInterfaceId": "eni-cedf6789",
                                                    "OwnerId": "012345678912",
                                                    "SubnetId": "subnet-1234abcd"
                                                },
                                                "properties": {
                                                    "FileSystemId": {
                                                        "description": "The ID of the file system for which the mount target is intended.",
                                                        "type": "string"
                                                    },
                                                    "IpAddress": {
                                                        "description": "Address at which the file system can be mounted by using the mount target.",
                                                        "type": "string"
                                                    },
                                                    "LifeCycleState": {
                                                        "description": "Lifecycle state of the mount target.",
                                                        "enum": [
                                                            "creating",
                                                            "available",
                                                            "updating",
                                                            "deleting",
                                                            "deleted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "MountTargetId": {
                                                        "description": "System-assigned mount target ID.",
                                                        "type": "string"
                                                    },
                                                    "NetworkInterfaceId": {
                                                        "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                                                        "type": "string"
                                                    },
                                                    "OwnerId": {
                                                        "description": "AWS account ID that owns the resource.",
                                                        "type": "string"
                                                    },
                                                    "SubnetId": {
                                                        "description": "The ID of the mount target's subnet.",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "MountTargetId",
                                                    "FileSystemId",
                                                    "SubnetId",
                                                    "LifeCycleState"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "NextMarker": {
                                            "description": "If a value is present, there are more mount targets to return. In a subsequent request, you can provide <code>Marker</code> in your request with this value to retrieve the next set of mount targets.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MountTargetNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "<p>Creates a mount target for a file system. You can then mount the file system on EC2 instances by using the mount target.</p> <p>You can create one mount target in each Availability Zone in your VPC. All EC2 instances in a VPC within a given Availability Zone share a single mount target for a given file system. If you have multiple subnets in an Availability Zone, you create a mount target in one of the subnets. EC2 instances do not need to be in the same subnet as the mount target in order to access their file system. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html\">Amazon EFS: How it Works</a>. </p> <p>In the request, you also specify a file system ID for which you are creating the mount target and the file system's lifecycle state must be <code>available</code>. For more information, see <a>DescribeFileSystems</a>.</p> <p>In the request, you also provide a subnet ID, which determines the following:</p> <ul> <li> <p>VPC in which Amazon EFS creates the mount target</p> </li> <li> <p>Availability Zone in which Amazon EFS creates the mount target</p> </li> <li> <p>IP address range from which Amazon EFS selects the IP address of the mount target (if you don't specify an IP address in the request)</p> </li> </ul> <p>After creating the mount target, Amazon EFS returns a response that includes, a <code>MountTargetId</code> and an <code>IpAddress</code>. You use this IP address when mounting the file system in an EC2 instance. You can also use the mount target's DNS name when mounting the file system. The EC2 instance on which you mount the file system by using the mount target can resolve the mount target's DNS name to its IP address. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation\">How it Works: Implementation Overview</a>. </p> <p>Note that you can create mount targets for a file system in only one VPC, and there can be only one mount target per Availability Zone. That is, if the file system already has one or more mount targets created for it, the subnet specified in the request to add another mount target must meet the following requirements:</p> <ul> <li> <p>Must belong to the same VPC as the subnets of the existing mount targets</p> </li> <li> <p>Must not be in the same Availability Zone as any of the subnets of the existing mount targets</p> </li> </ul> <p>If the request satisfies the requirements, Amazon EFS does the following:</p> <ul> <li> <p>Creates a new mount target in the specified subnet.</p> </li> <li> <p>Also creates a new network interface in the subnet as follows:</p> <ul> <li> <p>If the request provides an <code>IpAddress</code>, Amazon EFS assigns that IP address to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the Amazon EC2 <code>CreateNetworkInterface</code> call does when a request does not specify a primary private IP address).</p> </li> <li> <p>If the request provides <code>SecurityGroups</code>, this network interface is associated with those security groups. Otherwise, it belongs to the default security group for the subnet's VPC.</p> </li> <li> <p>Assigns the description <code>Mount target <i>fsmt-id</i> for file system <i>fs-id</i> </code> where <code> <i>fsmt-id</i> </code> is the mount target ID, and <code> <i>fs-id</i> </code> is the <code>FileSystemId</code>.</p> </li> <li> <p>Sets the <code>requesterManaged</code> property of the network interface to <code>true</code>, and the <code>requesterId</code> value to <code>EFS</code>.</p> </li> </ul> <p>Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface. After the network interface is created, Amazon EFS sets the <code>NetworkInterfaceId</code> field in the mount target's description to the network interface ID, and the <code>IpAddress</code> field to its address. If network interface creation fails, the entire <code>CreateMountTarget</code> operation fails.</p> </li> </ul> <note> <p>The <code>CreateMountTarget</code> call returns only after creating the network interface, but while the mount target state is still <code>creating</code>, you can check the mount target creation status by calling the <a>DescribeMountTargets</a> operation, which among other things returns the mount target state.</p> </note> <p>We recommend that you create a mount target in each of the Availability Zones. There are cost considerations for using a file system in an Availability Zone through a mount target created in another Availability Zone. For more information, see <a href=\"http://aws.amazon.com/efs/\">Amazon EFS</a>. In addition, by always using a mount target local to the instance's Availability Zone, you eliminate a partial failure scenario. If the Availability Zone in which your mount target is created goes down, then you can't access your file system through that mount target. </p> <p>This operation requires permissions for the following action on the file system:</p> <ul> <li> <p> <code>elasticfilesystem:CreateMountTarget</code> </p> </li> </ul> <p>This operation also requires permissions for the following Amazon EC2 actions:</p> <ul> <li> <p> <code>ec2:DescribeSubnets</code> </p> </li> <li> <p> <code>ec2:DescribeNetworkInterfaces</code> </p> </li> <li> <p> <code>ec2:CreateNetworkInterface</code> </p> </li> </ul>",
                "operationId": "CreateMountTarget",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "Provides a description of a mount target.",
                                    "example": {
                                        "FileSystemId": "fs-01234567",
                                        "IpAddress": "192.0.0.2",
                                        "LifeCycleState": "creating",
                                        "MountTargetId": "fsmt-12340abc",
                                        "NetworkInterfaceId": "eni-cedf6789",
                                        "OwnerId": "012345678912",
                                        "SubnetId": "subnet-1234abcd"
                                    },
                                    "properties": {
                                        "FileSystemId": {
                                            "description": "The ID of the file system for which the mount target is intended.",
                                            "type": "string"
                                        },
                                        "IpAddress": {
                                            "description": "Address at which the file system can be mounted by using the mount target.",
                                            "type": "string"
                                        },
                                        "LifeCycleState": {
                                            "description": "Lifecycle state of the mount target.",
                                            "enum": [
                                                "creating",
                                                "available",
                                                "updating",
                                                "deleting",
                                                "deleted"
                                            ],
                                            "type": "string"
                                        },
                                        "MountTargetId": {
                                            "description": "System-assigned mount target ID.",
                                            "type": "string"
                                        },
                                        "NetworkInterfaceId": {
                                            "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                                            "type": "string"
                                        },
                                        "OwnerId": {
                                            "description": "AWS account ID that owns the resource.",
                                            "type": "string"
                                        },
                                        "SubnetId": {
                                            "description": "The ID of the mount target's subnet.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "MountTargetId",
                                        "FileSystemId",
                                        "SubnetId",
                                        "LifeCycleState"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IncorrectFileSystemLifeCycleState",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "MountTargetConflict",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "SubnetNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "486": {
                        "description": "NoFreeAddressesInSubnet",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "487": {
                        "description": "IpAddressInUse",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "488": {
                        "description": "NetworkInterfaceLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "489": {
                        "description": "SecurityGroupLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "490": {
                        "description": "SecurityGroupNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "491": {
                        "description": "UnsupportedAvailabilityZone",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567",
                                    "SubnetId": "subnet-1234abcd"
                                },
                                "properties": {
                                    "FileSystemId": {
                                        "description": "The ID of the file system for which to create the mount target.",
                                        "type": "string"
                                    },
                                    "IpAddress": {
                                        "description": "Valid IPv4 address within the address range of the specified subnet.",
                                        "type": "string"
                                    },
                                    "SecurityGroups": {
                                        "description": "Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must be for the same VPC as subnet specified.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 5,
                                        "type": "array"
                                    },
                                    "SubnetId": {
                                        "description": "The ID of the subnet to add the mount target in.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "FileSystemId",
                                    "SubnetId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/mount-targets/{MountTargetId}": {
            "delete": {
                "description": "<p>Deletes the specified mount target.</p> <p>This operation forcibly breaks any mounts of the file system by using the mount target that is being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes might be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC by using another mount target.</p> <p>This operation requires permissions for the following action on the file system:</p> <ul> <li> <p> <code>elasticfilesystem:DeleteMountTarget</code> </p> </li> </ul> <note> <p>The <code>DeleteMountTarget</code> call returns while the mount target state is still <code>deleting</code>. You can check the mount target deletion by calling the <a>DescribeMountTargets</a> operation, which returns a list of mount target descriptions for the given file system. </p> </note> <p>The operation also requires permissions for the following Amazon EC2 action on the mount target's network interface:</p> <ul> <li> <p> <code>ec2:DeleteNetworkInterface</code> </p> </li> </ul>",
                "operationId": "DeleteMountTarget",
                "parameters": [
                    {
                        "in": "path",
                        "name": "MountTargetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "DependencyTimeout",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "MountTargetNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "MountTargetId": "fsmt-12340abc"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/2015-02-01/mount-targets/{MountTargetId}/security-groups": {
            "get": {
                "description": "<p>Returns the security groups currently in effect for a mount target. This operation requires that the network interface of the mount target has been created and the lifecycle state of the mount target is not <code>deleted</code>.</p> <p>This operation requires permissions for the following actions:</p> <ul> <li> <p> <code>elasticfilesystem:DescribeMountTargetSecurityGroups</code> action on the mount target's file system. </p> </li> <li> <p> <code>ec2:DescribeNetworkInterfaceAttribute</code> action on the mount target's network interface. </p> </li> </ul>",
                "operationId": "DescribeMountTargetSecurityGroups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "MountTargetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "example": {
                                        "SecurityGroups": [
                                            "sg-fghi4567"
                                        ]
                                    },
                                    "properties": {
                                        "SecurityGroups": {
                                            "description": "An array of security groups.",
                                            "items": {
                                                "type": "string"
                                            },
                                            "maxItems": 5,
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "SecurityGroups"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "MountTargetNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IncorrectMountTargetState",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "MountTargetId": "fsmt-12340abc"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "<p>Modifies the set of security groups in effect for a mount target.</p> <p>When you create a mount target, Amazon EFS also creates a new network interface. For more information, see <a>CreateMountTarget</a>. This operation replaces the security groups in effect for the network interface associated with a mount target, with the <code>SecurityGroups</code> provided in the request. This operation requires that the network interface of the mount target has been created and the lifecycle state of the mount target is not <code>deleted</code>. </p> <p>The operation requires permissions for the following actions:</p> <ul> <li> <p> <code>elasticfilesystem:ModifyMountTargetSecurityGroups</code> action on the mount target's file system. </p> </li> <li> <p> <code>ec2:ModifyNetworkInterfaceAttribute</code> action on the mount target's network interface. </p> </li> </ul>",
                "operationId": "ModifyMountTargetSecurityGroups",
                "parameters": [
                    {
                        "in": "path",
                        "name": "MountTargetId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "MountTargetNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "483": {
                        "description": "IncorrectMountTargetState",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "484": {
                        "description": "SecurityGroupLimitExceeded",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "485": {
                        "description": "SecurityGroupNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "MountTargetId": "fsmt-12340abc",
                                    "SecurityGroups": [
                                        "sg-abcd1234"
                                    ]
                                },
                                "properties": {
                                    "SecurityGroups": {
                                        "description": "An array of up to five VPC security group IDs.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 5,
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/2015-02-01/tags/{FileSystemId}/": {
            "get": {
                "description": "<p>Returns the tags associated with a file system. The order of tags returned in the response of one <code>DescribeTags</code> call and the order of tags returned across the responses of a multiple-call iteration (when using pagination) is unspecified. </p> <p> This operation requires permissions for the <code>elasticfilesystem:DescribeTags</code> action. </p>",
                "operationId": "DescribeTags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "FileSystemId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "<p/>",
                                    "example": {
                                        "Tags": [
                                            {
                                                "Key": "Name",
                                                "Value": "MyFileSystem"
                                            }
                                        ]
                                    },
                                    "properties": {
                                        "Marker": {
                                            "description": "If the request included a <code>Marker</code>, the response returns that value in this field.",
                                            "type": "string"
                                        },
                                        "NextMarker": {
                                            "description": "If a value is present, there are more tags to return. In a subsequent request, you can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code> parameter in your next request to retrieve the next set of tags.",
                                            "type": "string"
                                        },
                                        "Tags": {
                                            "description": "Returns tags associated with the file system as an array of <code>Tag</code> objects. ",
                                            "items": {
                                                "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                                "properties": {
                                                    "Key": {
                                                        "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                        "maxLength": 128,
                                                        "minLength": 1,
                                                        "type": "string"
                                                    },
                                                    "Value": {
                                                        "description": "The value of the tag key.",
                                                        "maxLength": 256,
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Key",
                                                    "Value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "Tags"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "480": {
                        "description": "BadRequest",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "481": {
                        "description": "InternalServerError",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "482": {
                        "description": "FileSystemNotFound",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "<p/>",
                                "example": {
                                    "FileSystemId": "fs-01234567"
                                },
                                "properties": {},
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            },
            "parameters": [
                {
                    "in": "query",
                    "name": "Action",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "query",
                    "name": "Version",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Content-Sha256",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Date",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Algorithm",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Credential",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Security-Token",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-Signature",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "in": "header",
                    "name": "X-Amz-SignedHeaders",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "AwsAccountId": {
                "type": "string"
            },
            "BadRequest": {},
            "CreateFileSystemRequest": {
                "example": {
                    "CreationToken": "tokenstring",
                    "PerformanceMode": "generalPurpose",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "MyFileSystem"
                        }
                    ]
                },
                "properties": {
                    "CreationToken": {
                        "description": "A string of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Encrypted": {
                        "description": "A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying <a>CreateFileSystemRequest$KmsKeyId</a> for an existing AWS Key Management Service (AWS KMS) customer master key (CMK). If you don't specify a CMK, then the default CMK for Amazon EFS, <code>/aws/elasticfilesystem</code>, is used to protect the encrypted file system. ",
                        "type": "boolean"
                    },
                    "KmsKeyId": {
                        "description": "<p>The ID of the AWS KMS CMK to be used to protect the encrypted file system. This parameter is only required if you want to use a nondefault CMK. If this parameter is not specified, the default CMK for Amazon EFS is used. This ID can be in one of the following formats:</p> <ul> <li> <p>Key ID - A unique identifier of the key, for example <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>ARN - An Amazon Resource Name (ARN) for the key, for example <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.</p> </li> <li> <p>Key alias - A previously created display name for a key, for example <code>alias/projectKey1</code>.</p> </li> <li> <p>Key alias ARN - An ARN for a key alias, for example <code>arn:aws:kms:us-west-2:444455556666:alias/projectKey1</code>.</p> </li> </ul> <p>If <code>KmsKeyId</code> is specified, the <a>CreateFileSystemRequest$Encrypted</a> parameter must be set to true.</p>",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "PerformanceMode": {
                        "description": "The performance mode of the file system. We recommend <code>generalPurpose</code> performance mode for most file systems. File systems using the <code>maxIO</code> performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created.",
                        "enum": [
                            "generalPurpose",
                            "maxIO"
                        ],
                        "type": "string"
                    },
                    "ProvisionedThroughputInMibps": {
                        "description": "The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                        "format": "double",
                        "minimum": 0,
                        "type": "number"
                    },
                    "Tags": {
                        "description": "A value that specifies to create one or more tags associated with the file system. Each tag is a user-defined key-value pair. Name your file system on creation by including a <code>\"Key\":\"Name\",\"Value\":\"{value}\"</code> key-value pair.",
                        "items": {
                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                            "properties": {
                                "Key": {
                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag key.",
                                    "maxLength": 256,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ThroughputMode": {
                        "description": "The throughput mode for the file system to be created. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                        "enum": [
                            "bursting",
                            "provisioned"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "CreationToken"
                ],
                "type": "object"
            },
            "CreateMountTargetRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567",
                    "SubnetId": "subnet-1234abcd"
                },
                "properties": {
                    "FileSystemId": {
                        "description": "The ID of the file system for which to create the mount target.",
                        "type": "string"
                    },
                    "IpAddress": {
                        "description": "Valid IPv4 address within the address range of the specified subnet.",
                        "type": "string"
                    },
                    "SecurityGroups": {
                        "description": "Up to five VPC security group IDs, of the form <code>sg-xxxxxxxx</code>. These must be for the same VPC as subnet specified.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 5,
                        "type": "array"
                    },
                    "SubnetId": {
                        "description": "The ID of the subnet to add the mount target in.",
                        "type": "string"
                    }
                },
                "required": [
                    "FileSystemId",
                    "SubnetId"
                ],
                "type": "object"
            },
            "CreateTagsRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567",
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "MyFileSystem"
                        }
                    ]
                },
                "properties": {
                    "Tags": {
                        "description": "An array of <code>Tag</code> objects to add. Each <code>Tag</code> object is a key-value pair. ",
                        "items": {
                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                            "properties": {
                                "Key": {
                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag key.",
                                    "maxLength": 256,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Tags"
                ],
                "type": "object"
            },
            "CreationToken": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
            },
            "DeleteFileSystemRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567"
                },
                "properties": {},
                "type": "object"
            },
            "DeleteMountTargetRequest": {
                "description": "<p/>",
                "example": {
                    "MountTargetId": "fsmt-12340abc"
                },
                "properties": {},
                "type": "object"
            },
            "DeleteTagsRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567",
                    "TagKeys": [
                        "Name"
                    ]
                },
                "properties": {
                    "TagKeys": {
                        "description": "A list of tag keys to delete.",
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "TagKeys"
                ],
                "type": "object"
            },
            "DependencyTimeout": {},
            "DescribeFileSystemsRequest": {
                "description": "<p/>",
                "example": {},
                "properties": {},
                "type": "object"
            },
            "DescribeFileSystemsResponse": {
                "example": {
                    "FileSystems": [
                        {
                            "CreationTime": "1481841524.0",
                            "CreationToken": "tokenstring",
                            "FileSystemId": "fs-01234567",
                            "LifeCycleState": "available",
                            "Name": "MyFileSystem",
                            "NumberOfMountTargets": 1,
                            "OwnerId": "012345678912",
                            "PerformanceMode": "generalPurpose",
                            "SizeInBytes": {
                                "Value": 6144
                            },
                            "Tags": [
                                {
                                    "Key": "Name",
                                    "Value": "MyFileSystem"
                                }
                            ]
                        }
                    ]
                },
                "properties": {
                    "FileSystems": {
                        "description": "An array of file system descriptions.",
                        "items": {
                            "description": "A description of the file system.",
                            "example": {
                                "CreationTime": "1481841524.0",
                                "CreationToken": "tokenstring",
                                "FileSystemId": "fs-01234567",
                                "LifeCycleState": "creating",
                                "NumberOfMountTargets": 0,
                                "OwnerId": "012345678912",
                                "PerformanceMode": "generalPurpose",
                                "SizeInBytes": {
                                    "Value": 0
                                },
                                "Tags": [
                                    {
                                        "Key": "Name",
                                        "Value": "MyFileSystem"
                                    }
                                ]
                            },
                            "properties": {
                                "CreationTime": {
                                    "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "CreationToken": {
                                    "description": "The opaque string specified in the request.",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Encrypted": {
                                    "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                                    "type": "boolean"
                                },
                                "FileSystemId": {
                                    "description": "The ID of the file system, assigned by Amazon EFS.",
                                    "type": "string"
                                },
                                "KmsKeyId": {
                                    "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "LifeCycleState": {
                                    "description": "The lifecycle phase of the file system.",
                                    "enum": [
                                        "creating",
                                        "available",
                                        "updating",
                                        "deleting",
                                        "deleted"
                                    ],
                                    "type": "string"
                                },
                                "Name": {
                                    "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                                    "maxLength": 256,
                                    "type": "string"
                                },
                                "NumberOfMountTargets": {
                                    "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "OwnerId": {
                                    "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                                    "type": "string"
                                },
                                "PerformanceMode": {
                                    "description": "The performance mode of the file system.",
                                    "enum": [
                                        "generalPurpose",
                                        "maxIO"
                                    ],
                                    "type": "string"
                                },
                                "ProvisionedThroughputInMibps": {
                                    "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                                    "format": "double",
                                    "minimum": 0,
                                    "type": "number"
                                },
                                "SizeInBytes": {
                                    "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                                    "properties": {
                                        "Timestamp": {
                                            "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "Value": {
                                            "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ValueInIA": {
                                            "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "ValueInStandard": {
                                            "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                            "minimum": 0,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "Value"
                                    ],
                                    "type": "object"
                                },
                                "Tags": {
                                    "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                                    "items": {
                                        "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                        "properties": {
                                            "Key": {
                                                "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                                "maxLength": 128,
                                                "minLength": 1,
                                                "type": "string"
                                            },
                                            "Value": {
                                                "description": "The value of the tag key.",
                                                "maxLength": 256,
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "Key",
                                            "Value"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "ThroughputMode": {
                                    "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                                    "enum": [
                                        "bursting",
                                        "provisioned"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "OwnerId",
                                "CreationToken",
                                "FileSystemId",
                                "CreationTime",
                                "LifeCycleState",
                                "NumberOfMountTargets",
                                "SizeInBytes",
                                "PerformanceMode",
                                "Tags"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "Marker": {
                        "description": "Present if provided by caller in the request (String).",
                        "type": "string"
                    },
                    "NextMarker": {
                        "description": "Present if there are more file systems than returned in the response (String). You can use the <code>NextMarker</code> in the subsequent request to fetch the descriptions.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeLifecycleConfigurationRequest": {
                "example": {
                    "FileSystemId": "fs-01234567"
                },
                "properties": {},
                "type": "object"
            },
            "DescribeMountTargetSecurityGroupsRequest": {
                "description": "<p/>",
                "example": {
                    "MountTargetId": "fsmt-12340abc"
                },
                "properties": {},
                "type": "object"
            },
            "DescribeMountTargetSecurityGroupsResponse": {
                "example": {
                    "SecurityGroups": [
                        "sg-fghi4567"
                    ]
                },
                "properties": {
                    "SecurityGroups": {
                        "description": "An array of security groups.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 5,
                        "type": "array"
                    }
                },
                "required": [
                    "SecurityGroups"
                ],
                "type": "object"
            },
            "DescribeMountTargetsRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567"
                },
                "properties": {},
                "type": "object"
            },
            "DescribeMountTargetsResponse": {
                "description": "<p/>",
                "example": {
                    "MountTargets": [
                        {
                            "FileSystemId": "fs-01234567",
                            "IpAddress": "192.0.0.2",
                            "LifeCycleState": "available",
                            "MountTargetId": "fsmt-12340abc",
                            "NetworkInterfaceId": "eni-cedf6789",
                            "OwnerId": "012345678912",
                            "SubnetId": "subnet-1234abcd"
                        }
                    ]
                },
                "properties": {
                    "Marker": {
                        "description": "If the request included the <code>Marker</code>, the response returns that value in this field.",
                        "type": "string"
                    },
                    "MountTargets": {
                        "description": "Returns the file system's mount targets as an array of <code>MountTargetDescription</code> objects.",
                        "items": {
                            "description": "Provides a description of a mount target.",
                            "example": {
                                "FileSystemId": "fs-01234567",
                                "IpAddress": "192.0.0.2",
                                "LifeCycleState": "creating",
                                "MountTargetId": "fsmt-12340abc",
                                "NetworkInterfaceId": "eni-cedf6789",
                                "OwnerId": "012345678912",
                                "SubnetId": "subnet-1234abcd"
                            },
                            "properties": {
                                "FileSystemId": {
                                    "description": "The ID of the file system for which the mount target is intended.",
                                    "type": "string"
                                },
                                "IpAddress": {
                                    "description": "Address at which the file system can be mounted by using the mount target.",
                                    "type": "string"
                                },
                                "LifeCycleState": {
                                    "description": "Lifecycle state of the mount target.",
                                    "enum": [
                                        "creating",
                                        "available",
                                        "updating",
                                        "deleting",
                                        "deleted"
                                    ],
                                    "type": "string"
                                },
                                "MountTargetId": {
                                    "description": "System-assigned mount target ID.",
                                    "type": "string"
                                },
                                "NetworkInterfaceId": {
                                    "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                                    "type": "string"
                                },
                                "OwnerId": {
                                    "description": "AWS account ID that owns the resource.",
                                    "type": "string"
                                },
                                "SubnetId": {
                                    "description": "The ID of the mount target's subnet.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "MountTargetId",
                                "FileSystemId",
                                "SubnetId",
                                "LifeCycleState"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "NextMarker": {
                        "description": "If a value is present, there are more mount targets to return. In a subsequent request, you can provide <code>Marker</code> in your request with this value to retrieve the next set of mount targets.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DescribeTagsRequest": {
                "description": "<p/>",
                "example": {
                    "FileSystemId": "fs-01234567"
                },
                "properties": {},
                "type": "object"
            },
            "DescribeTagsResponse": {
                "description": "<p/>",
                "example": {
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "MyFileSystem"
                        }
                    ]
                },
                "properties": {
                    "Marker": {
                        "description": "If the request included a <code>Marker</code>, the response returns that value in this field.",
                        "type": "string"
                    },
                    "NextMarker": {
                        "description": "If a value is present, there are more tags to return. In a subsequent request, you can provide the value of <code>NextMarker</code> as the value of the <code>Marker</code> parameter in your next request to retrieve the next set of tags.",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "Returns tags associated with the file system as an array of <code>Tag</code> objects. ",
                        "items": {
                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                            "properties": {
                                "Key": {
                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag key.",
                                    "maxLength": 256,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "Tags"
                ],
                "type": "object"
            },
            "Encrypted": {
                "type": "boolean"
            },
            "FileSystemAlreadyExists": {},
            "FileSystemDescription": {
                "description": "A description of the file system.",
                "example": {
                    "CreationTime": "1481841524.0",
                    "CreationToken": "tokenstring",
                    "FileSystemId": "fs-01234567",
                    "LifeCycleState": "creating",
                    "NumberOfMountTargets": 0,
                    "OwnerId": "012345678912",
                    "PerformanceMode": "generalPurpose",
                    "SizeInBytes": {
                        "Value": 0
                    },
                    "Tags": [
                        {
                            "Key": "Name",
                            "Value": "MyFileSystem"
                        }
                    ]
                },
                "properties": {
                    "CreationTime": {
                        "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                        "format": "date-time",
                        "type": "string"
                    },
                    "CreationToken": {
                        "description": "The opaque string specified in the request.",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Encrypted": {
                        "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                        "type": "boolean"
                    },
                    "FileSystemId": {
                        "description": "The ID of the file system, assigned by Amazon EFS.",
                        "type": "string"
                    },
                    "KmsKeyId": {
                        "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                        "maxLength": 2048,
                        "minLength": 1,
                        "type": "string"
                    },
                    "LifeCycleState": {
                        "description": "The lifecycle phase of the file system.",
                        "enum": [
                            "creating",
                            "available",
                            "updating",
                            "deleting",
                            "deleted"
                        ],
                        "type": "string"
                    },
                    "Name": {
                        "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                        "maxLength": 256,
                        "type": "string"
                    },
                    "NumberOfMountTargets": {
                        "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "OwnerId": {
                        "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                        "type": "string"
                    },
                    "PerformanceMode": {
                        "description": "The performance mode of the file system.",
                        "enum": [
                            "generalPurpose",
                            "maxIO"
                        ],
                        "type": "string"
                    },
                    "ProvisionedThroughputInMibps": {
                        "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                        "format": "double",
                        "minimum": 0,
                        "type": "number"
                    },
                    "SizeInBytes": {
                        "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                        "properties": {
                            "Timestamp": {
                                "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                "format": "date-time",
                                "type": "string"
                            },
                            "Value": {
                                "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "ValueInIA": {
                                "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                "minimum": 0,
                                "type": "integer"
                            },
                            "ValueInStandard": {
                                "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                "minimum": 0,
                                "type": "integer"
                            }
                        },
                        "required": [
                            "Value"
                        ],
                        "type": "object"
                    },
                    "Tags": {
                        "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                        "items": {
                            "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                            "properties": {
                                "Key": {
                                    "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The value of the tag key.",
                                    "maxLength": 256,
                                    "type": "string"
                                }
                            },
                            "required": [
                                "Key",
                                "Value"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "ThroughputMode": {
                        "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                        "enum": [
                            "bursting",
                            "provisioned"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "OwnerId",
                    "CreationToken",
                    "FileSystemId",
                    "CreationTime",
                    "LifeCycleState",
                    "NumberOfMountTargets",
                    "SizeInBytes",
                    "PerformanceMode",
                    "Tags"
                ],
                "type": "object"
            },
            "FileSystemDescriptions": {
                "items": {
                    "description": "A description of the file system.",
                    "example": {
                        "CreationTime": "1481841524.0",
                        "CreationToken": "tokenstring",
                        "FileSystemId": "fs-01234567",
                        "LifeCycleState": "creating",
                        "NumberOfMountTargets": 0,
                        "OwnerId": "012345678912",
                        "PerformanceMode": "generalPurpose",
                        "SizeInBytes": {
                            "Value": 0
                        },
                        "Tags": [
                            {
                                "Key": "Name",
                                "Value": "MyFileSystem"
                            }
                        ]
                    },
                    "properties": {
                        "CreationTime": {
                            "description": "The time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).",
                            "format": "date-time",
                            "type": "string"
                        },
                        "CreationToken": {
                            "description": "The opaque string specified in the request.",
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Encrypted": {
                            "description": "A Boolean value that, if true, indicates that the file system is encrypted.",
                            "type": "boolean"
                        },
                        "FileSystemId": {
                            "description": "The ID of the file system, assigned by Amazon EFS.",
                            "type": "string"
                        },
                        "KmsKeyId": {
                            "description": "The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                        },
                        "LifeCycleState": {
                            "description": "The lifecycle phase of the file system.",
                            "enum": [
                                "creating",
                                "available",
                                "updating",
                                "deleting",
                                "deleted"
                            ],
                            "type": "string"
                        },
                        "Name": {
                            "description": "You can add tags to a file system, including a <code>Name</code> tag. For more information, see <a>CreateFileSystem</a>. If the file system has a <code>Name</code> tag, Amazon EFS returns the value in this field. ",
                            "maxLength": 256,
                            "type": "string"
                        },
                        "NumberOfMountTargets": {
                            "description": "The current number of mount targets that the file system has. For more information, see <a>CreateMountTarget</a>.",
                            "minimum": 0,
                            "type": "integer"
                        },
                        "OwnerId": {
                            "description": "The AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.",
                            "type": "string"
                        },
                        "PerformanceMode": {
                            "description": "The performance mode of the file system.",
                            "enum": [
                                "generalPurpose",
                                "maxIO"
                            ],
                            "type": "string"
                        },
                        "ProvisionedThroughputInMibps": {
                            "description": "The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see <a href=\"https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits\">Amazon EFS Limits That You Can Increase</a> in the <i>Amazon EFS User Guide.</i> ",
                            "format": "double",
                            "minimum": 0,
                            "type": "number"
                        },
                        "SizeInBytes": {
                            "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The <code>Timestamp</code> value is the integer number of seconds since 1970-01-01T00:00:00Z. The <code>SizeInBytes</code> value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, <code>SizeInBytes</code> represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. ",
                            "properties": {
                                "Timestamp": {
                                    "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "Value": {
                                    "description": "The latest known metered size (in bytes) of data stored in the file system.",
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ValueInIA": {
                                    "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "ValueInStandard": {
                                    "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                                    "minimum": 0,
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "Value"
                            ],
                            "type": "object"
                        },
                        "Tags": {
                            "description": "The tags associated with the file system, presented as an array of <code>Tag</code> objects.",
                            "items": {
                                "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                                "properties": {
                                    "Key": {
                                        "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                                        "maxLength": 128,
                                        "minLength": 1,
                                        "type": "string"
                                    },
                                    "Value": {
                                        "description": "The value of the tag key.",
                                        "maxLength": 256,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "Key",
                                    "Value"
                                ],
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "ThroughputMode": {
                            "description": "The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.",
                            "enum": [
                                "bursting",
                                "provisioned"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "OwnerId",
                        "CreationToken",
                        "FileSystemId",
                        "CreationTime",
                        "LifeCycleState",
                        "NumberOfMountTargets",
                        "SizeInBytes",
                        "PerformanceMode",
                        "Tags"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "FileSystemId": {
                "type": "string"
            },
            "FileSystemInUse": {},
            "FileSystemLimitExceeded": {},
            "FileSystemNotFound": {},
            "FileSystemNullableSizeValue": {
                "minimum": 0,
                "type": "integer"
            },
            "FileSystemSize": {
                "description": "The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value represents the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.",
                "properties": {
                    "Timestamp": {
                        "description": "The time at which the size of data, returned in the <code>Value</code> field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.",
                        "format": "date-time",
                        "type": "string"
                    },
                    "Value": {
                        "description": "The latest known metered size (in bytes) of data stored in the file system.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ValueInIA": {
                        "description": "The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "ValueInStandard": {
                        "description": "The latest known metered size (in bytes) of data stored in the Standard storage class.",
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "Value"
                ],
                "type": "object"
            },
            "FileSystemSizeValue": {
                "minimum": 0,
                "type": "integer"
            },
            "IncorrectFileSystemLifeCycleState": {},
            "IncorrectMountTargetState": {},
            "InsufficientThroughputCapacity": {},
            "InternalServerError": {},
            "IpAddress": {
                "type": "string"
            },
            "IpAddressInUse": {},
            "KmsKeyId": {
                "maxLength": 2048,
                "minLength": 1,
                "type": "string"
            },
            "LifeCycleState": {
                "enum": [
                    "creating",
                    "available",
                    "updating",
                    "deleting",
                    "deleted"
                ],
                "type": "string"
            },
            "LifecycleConfigurationDescription": {
                "example": {
                    "LifecyclePolicies": [
                        {
                            "TransitionToIA": "AFTER_30_DAYS"
                        }
                    ]
                },
                "properties": {
                    "LifecyclePolicies": {
                        "description": "An array of lifecycle management policies. Currently, EFS supports a maximum of one policy per file system.",
                        "items": {
                            "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                            "properties": {
                                "TransitionToIA": {
                                    "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                                    "enum": [
                                        "AFTER_30_DAYS"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "LifecyclePolicies": {
                "items": {
                    "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                    "properties": {
                        "TransitionToIA": {
                            "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                            "enum": [
                                "AFTER_30_DAYS"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "LifecyclePolicy": {
                "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                "properties": {
                    "TransitionToIA": {
                        "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                        "enum": [
                            "AFTER_30_DAYS"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Marker": {
                "type": "string"
            },
            "MaxItems": {
                "minimum": 1,
                "type": "integer"
            },
            "ModifyMountTargetSecurityGroupsRequest": {
                "description": "<p/>",
                "example": {
                    "MountTargetId": "fsmt-12340abc",
                    "SecurityGroups": [
                        "sg-abcd1234"
                    ]
                },
                "properties": {
                    "SecurityGroups": {
                        "description": "An array of up to five VPC security group IDs.",
                        "items": {
                            "type": "string"
                        },
                        "maxItems": 5,
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "MountTargetConflict": {},
            "MountTargetCount": {
                "minimum": 0,
                "type": "integer"
            },
            "MountTargetDescription": {
                "description": "Provides a description of a mount target.",
                "example": {
                    "FileSystemId": "fs-01234567",
                    "IpAddress": "192.0.0.2",
                    "LifeCycleState": "creating",
                    "MountTargetId": "fsmt-12340abc",
                    "NetworkInterfaceId": "eni-cedf6789",
                    "OwnerId": "012345678912",
                    "SubnetId": "subnet-1234abcd"
                },
                "properties": {
                    "FileSystemId": {
                        "description": "The ID of the file system for which the mount target is intended.",
                        "type": "string"
                    },
                    "IpAddress": {
                        "description": "Address at which the file system can be mounted by using the mount target.",
                        "type": "string"
                    },
                    "LifeCycleState": {
                        "description": "Lifecycle state of the mount target.",
                        "enum": [
                            "creating",
                            "available",
                            "updating",
                            "deleting",
                            "deleted"
                        ],
                        "type": "string"
                    },
                    "MountTargetId": {
                        "description": "System-assigned mount target ID.",
                        "type": "string"
                    },
                    "NetworkInterfaceId": {
                        "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                        "type": "string"
                    },
                    "OwnerId": {
                        "description": "AWS account ID that owns the resource.",
                        "type": "string"
                    },
                    "SubnetId": {
                        "description": "The ID of the mount target's subnet.",
                        "type": "string"
                    }
                },
                "required": [
                    "MountTargetId",
                    "FileSystemId",
                    "SubnetId",
                    "LifeCycleState"
                ],
                "type": "object"
            },
            "MountTargetDescriptions": {
                "items": {
                    "description": "Provides a description of a mount target.",
                    "example": {
                        "FileSystemId": "fs-01234567",
                        "IpAddress": "192.0.0.2",
                        "LifeCycleState": "creating",
                        "MountTargetId": "fsmt-12340abc",
                        "NetworkInterfaceId": "eni-cedf6789",
                        "OwnerId": "012345678912",
                        "SubnetId": "subnet-1234abcd"
                    },
                    "properties": {
                        "FileSystemId": {
                            "description": "The ID of the file system for which the mount target is intended.",
                            "type": "string"
                        },
                        "IpAddress": {
                            "description": "Address at which the file system can be mounted by using the mount target.",
                            "type": "string"
                        },
                        "LifeCycleState": {
                            "description": "Lifecycle state of the mount target.",
                            "enum": [
                                "creating",
                                "available",
                                "updating",
                                "deleting",
                                "deleted"
                            ],
                            "type": "string"
                        },
                        "MountTargetId": {
                            "description": "System-assigned mount target ID.",
                            "type": "string"
                        },
                        "NetworkInterfaceId": {
                            "description": "The ID of the network interface that Amazon EFS created when it created the mount target.",
                            "type": "string"
                        },
                        "OwnerId": {
                            "description": "AWS account ID that owns the resource.",
                            "type": "string"
                        },
                        "SubnetId": {
                            "description": "The ID of the mount target's subnet.",
                            "type": "string"
                        }
                    },
                    "required": [
                        "MountTargetId",
                        "FileSystemId",
                        "SubnetId",
                        "LifeCycleState"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "MountTargetId": {
                "type": "string"
            },
            "MountTargetNotFound": {},
            "NetworkInterfaceId": {
                "type": "string"
            },
            "NetworkInterfaceLimitExceeded": {},
            "NoFreeAddressesInSubnet": {},
            "PerformanceMode": {
                "enum": [
                    "generalPurpose",
                    "maxIO"
                ],
                "type": "string"
            },
            "ProvisionedThroughputInMibps": {
                "format": "double",
                "minimum": 0,
                "type": "number"
            },
            "PutLifecycleConfigurationRequest": {
                "example": {
                    "FileSystemId": "fs-01234567",
                    "LifecyclePolicies": [
                        {
                            "TransitionToIA": "AFTER_30_DAYS"
                        }
                    ]
                },
                "properties": {
                    "LifecyclePolicies": {
                        "description": "An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code> object. A <code>LifecycleConfiguration</code> object tells lifecycle management when to transition files from the Standard storage class to the Infrequent Access storage class.",
                        "items": {
                            "description": "Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.",
                            "properties": {
                                "TransitionToIA": {
                                    "description": "<p>A value that indicates how long it takes to transition files to the IA storage class. Currently, the only valid value is <code>AFTER_30_DAYS</code>.</p> <p> <code>AFTER_30_DAYS</code> indicates files that have not been read from or written to for 30 days are transitioned from the Standard storage class to the IA storage class. Metadata operations such as listing the contents of a directory don't count as a file access event.</p>",
                                    "enum": [
                                        "AFTER_30_DAYS"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "LifecyclePolicies"
                ],
                "type": "object"
            },
            "SecurityGroup": {
                "type": "string"
            },
            "SecurityGroupLimitExceeded": {},
            "SecurityGroupNotFound": {},
            "SecurityGroups": {
                "items": {
                    "type": "string"
                },
                "maxItems": 5,
                "type": "array"
            },
            "SubnetId": {
                "type": "string"
            },
            "SubnetNotFound": {},
            "Tag": {
                "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                "properties": {
                    "Key": {
                        "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "Value": {
                        "description": "The value of the tag key.",
                        "maxLength": 256,
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ],
                "type": "object"
            },
            "TagKey": {
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
            },
            "TagKeys": {
                "items": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "type": "array"
            },
            "TagValue": {
                "maxLength": 256,
                "type": "string"
            },
            "Tags": {
                "items": {
                    "description": "A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code> ",
                    "properties": {
                        "Key": {
                            "description": "The tag key (String). The key can't start with <code>aws:</code>.",
                            "maxLength": 128,
                            "minLength": 1,
                            "type": "string"
                        },
                        "Value": {
                            "description": "The value of the tag key.",
                            "maxLength": 256,
                            "type": "string"
                        }
                    },
                    "required": [
                        "Key",
                        "Value"
                    ],
                    "type": "object"
                },
                "type": "array"
            },
            "ThroughputLimitExceeded": {},
            "ThroughputMode": {
                "enum": [
                    "bursting",
                    "provisioned"
                ],
                "type": "string"
            },
            "Timestamp": {
                "format": "date-time",
                "type": "string"
            },
            "TooManyRequests": {},
            "TransitionToIARules": {
                "enum": [
                    "AFTER_30_DAYS"
                ],
                "type": "string"
            },
            "UnsupportedAvailabilityZone": {},
            "UpdateFileSystemRequest": {
                "properties": {
                    "ProvisionedThroughputInMibps": {
                        "description": "(Optional) The amount of throughput, in MiB/s, that you want to provision for your file system. If you're not updating the amount of provisioned throughput for your file system, you don't need to provide this value in your request.",
                        "format": "double",
                        "minimum": 0,
                        "type": "number"
                    },
                    "ThroughputMode": {
                        "description": "(Optional) The throughput mode that you want your file system to use. If you're not updating your throughput mode, you don't need to provide this value in your request.",
                        "enum": [
                            "bursting",
                            "provisioned"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Action": {
                "in": "query",
                "name": "Action",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Version": {
                "in": "query",
                "name": "Version",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Algorithm": {
                "in": "header",
                "name": "X-Amz-Algorithm",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Content-Sha256": {
                "in": "header",
                "name": "X-Amz-Content-Sha256",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Credential": {
                "in": "header",
                "name": "X-Amz-Credential",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Date": {
                "in": "header",
                "name": "X-Amz-Date",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Security-Token": {
                "in": "header",
                "name": "X-Amz-Security-Token",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-Signature": {
                "in": "header",
                "name": "X-Amz-Signature",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "X-Amz-SignedHeaders": {
                "in": "header",
                "name": "X-Amz-SignedHeaders",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "DeleteFileSystemBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "<p/>",
                            "example": {
                                "FileSystemId": "fs-01234567"
                            },
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            },
            "DeleteMountTargetBody": {
                "content": {
                    "application/json": {
                        "schema": {
                            "description": "<p/>",
                            "example": {
                                "MountTargetId": "fsmt-12340abc"
                            },
                            "properties": {},
                            "type": "object"
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "hmac": {
                "description": "Amazon Signature authorization v4",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey",
                "x-amazon-apigateway-authtype": "awsSigv4"
            }
        }
    }
}